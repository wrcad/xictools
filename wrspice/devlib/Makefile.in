#######################################################################
# devlib/Makefile.in
#######################################################################
# $Id: Makefile.in,v 2.49 2014/02/28 06:04:53 stevew Exp $
#######################################################################

DEVLIB_VERSION = @DEVLIB_VERSION@
DATE = @DATE@

prefix = @prefix@
CXX = @CXX@
CC = @CC@
CFLAGS = @CFLAGS_S@ @UFLAGS@
DEPEND_PROG = @DEPEND_PROG@ @CFLAGS_S@
AR = @AR@
RANLIB = @RANLIB@
FILTER = @FILTER@
PIC_OPT = @PIC_OPT@
INSTALL = @INSTALL@
LIB_TARGET = @DEVLIB_STATIC_FILE@

#######################################################################
# library configuration

# Devices built as loadable modules, not in library (not implemented yet).
MODULES = \
  bsim1 \
  bsim2 \
  bsim32 \
  bsim3.2.4 \
  bsim3.3.0 \
  bsim4.2.1 \
  bsim4.3.0 \
  bsim4.4.0 \
  bsim4.6.5 \
  bsim4.7.0 \
  bsim4.8.0 \
  b3soi-3.0 \
  b3soi-3.2 \
  bsimsoi-4.0 \
  bsimsoi-4.3 \
  bsimsoi-4.4 \
  ekv \
  hisim-1.1.0 \
  hisim-1.2.0 \
  stag \
  ufsoi-7.5

# Devices provided in the static library.
INDEVICES = \
  bjt \
  cap \
  dio \
  ind \
  jfet \
  jfet2 \
  jj \
  mes \
  mos \
  res \
  src \
  sw \
  tjm \
  tra \
  urc \
  vbic

# For now, include the modules in the static library.
DEVICES = $(INDEVICES) $(MODULES)

#######################################################################
CCFILES = devlib.cc gencurrent.cc tempr.cc
ALLFILES = $(CCFILES) Makefile.in
COBJS = toc.o $(CCFILES:.cc=.o)
INCLUDE = -Iinclude
SUBDIRS = $(DEVICES) disto
DEVOBJS = $(SUBDIRS:=/*.o)

#######################################################################
####### Library targets ###############################################

dummy:
	-@cd include; $(MAKE)
	-@cd adms/include; $(MAKE)
	@echo Making device library;
	$(MAKE) $(LIB_TARGET);

veriloga:
	-@cd adms/include; $(MAKE)
	-@cd adms/examples; $(MAKE)

$(LIB_TARGET): subdirs $(COBJS)
	@if [ -f $(LIB_TARGET) ]; then \
	    rm -f $(LIB_TARGET); \
	fi
	$(AR) cr $(LIB_TARGET) $(COBJS) $(DEVOBJS)
	$(RANLIB) $(LIB_TARGET)

toc.cc:: Makefile
	@echo "// toc.cc generated by make, do not edit" > toc.cc
	@echo >> toc.cc
	@echo "#include \"device.h\"">> toc.cc
	@echo >> toc.cc
	@echo "extern \"C\" {">> toc.cc
	for a in $(DEVICES); do \
	    set -- `grep ^MODULE $$a/Makefile`; \
	    echo "extern void $${3}_c(IFdevice**, int*);">> toc.cc; \
	done
	@echo "}">> toc.cc
	@echo >> toc.cc
	echo "const char *sDevLib::dl_version = \"$(DEVLIB_VERSION)\";">> toc.cc
	echo "sDevLib DEV;">> toc.cc
	set -- $(DEVICES); \
	echo >> toc.cc
	echo "void">> toc.cc
	echo "sDevLib::init()">> toc.cc
	echo "{">> toc.cc
	echo "    dl_devices = 0;">>toc.cc
	echo "    dl_numdevs = 0;">>toc.cc
	echo "    dl_size = 0;">>toc.cc
	for a in $(DEVICES); do \
	    set -- `grep ^MODULE $$a/Makefile`; \
	    echo "    loadDev(&$${3}_c);">> toc.cc; \
	done
	echo "}">> toc.cc

devlist:
	echo "$(INDEVICES)" > devices
	echo "$(MODULES)" > modules

#######################################################################
####### Object targets ################################################

objs: $(COBJS)

.cc.o:
	$(CXX) $(CFLAGS) $(INCLUDE) -c $*.cc

toc.o: toc.cc
toc.so: toc.cc

#######################################################################
####### Recursive targets #############################################

subdirs:
	for a in $(SUBDIRS); do \
	    $(MAKE) -C $$a ; \
	done;

#######################################################################
####### Dependency targets ############################################
# note: mingw requires explicit return from cd

depend:
	-@for a in include adms/include $(SUBDIRS); do \
	    $(MAKE) -C $$a  depend; \
	done
	@echo depending in devlib
	-@if [ x$(DEPEND_DONE) = x ]; then \
	    echo DEPEND_DONE = 1 >> Makefile; \
	    for a in $(CCFILES:.cc=); do \
	        $(DEPEND_PROG) $(INCLUDE) $$a.cc $(FILTER) >> Makefile; \
	    done \
	fi

#######################################################################
####### Clean targets #################################################

clean:
	-@for a in adms/examples $(SUBDIRS); do \
	    $(MAKE) -C $$a  $@ ; \
	done
	-@rm -f toc.cc *.o *.a

distclean:
	-@for a in include adms/include adms/examples  $(SUBDIRS); do \
	    $(MAKE) -C $$a  $@ ; \
	done
	-@rm -f toc.cc *.o *.a Makefile devices modules
	-@rm -f adms/Makefile

#######################################################################
####### Install targets ###############################################

INSTALL_PREFIX ?= $(prefix)
LPATH = ..

#######################################################################
